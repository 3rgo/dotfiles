#!/bin/bash

# Accept Xcode licence
xcodebuild -license accept
# Install XCode CLI
xcode-select --install

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# Install zsh
echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

# Add global gitignore
ln -s $HOME/.dotfiles/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.global-gitignore

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# Symlink the Mackup config
ln -s $HOME/.dotfiles/macos/.mackup.cfg $HOME/.mackup.cfg

# Fix missing font characters (see https://github.com/robbyrussell/oh-my-zsh/issues/1906)
cd ~/.oh-my-zsh/themes/
git checkout d6a36b1 agnoster.zsh-theme

# Activate z
cd ~/.dotfiles/shell
chmod +x z.sh

echo 'Install homebrew'
echo '----------------'
echo install homebrew
sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
echo 'eval "$(/usr/local/bin/brew shellenv)"' >> $HOME/.zprofile
eval "$(/usr/local/bin/brew shellenv)"

# Disable homebrew automatic post-install cleanup until the end of the script
export HOMEBREW_NO_INSTALL_CLEANUP=1

echo 'Install fire code font'
echo '------------'
brew tap homebrew/cask-fonts
brew install --cask font-fira-code

echo 'Install python'
echo '------------'
brew install python
brew install coreutils
pip install powerline-status

echo 'Install node'
echo '------------'
brew install node
brew install npm

echo 'Configure npm'
echo '-------------'
# Create a directory for global packages and tell npm where to store globally installed packages
mkdir "${HOME}/.npm-packages"
npm config set prefix "${HOME}/.npm-packages"

echo 'Install pkg-config'
echo '------------------'
brew install pkg-config

echo 'Install wget'
echo '------------'
brew install wget

echo 'Install ncdu'
echo '------------'
brew install ncdu

echo 'Install hub'
echo '-----------'
brew install hub

echo 'Install ack'
echo '-----------'
brew install ack

echo 'Install keka'
echo '-----------'
brew install --cask keka

echo 'Install some nice quicklook plugins'
echo '-----------------------------------'
brew install --cask qlmarkdown quicklook-json quicklook-csv

echo 'Install redis'
echo '-----------'
brew install redis

echo 'Install php'
echo '-----------'
brew tap shivammathur/php
brew tap shivammathur/extensions
brew install shivammathur/php/php@8.2
brew link --overwrite --force php@8.2
brew install shivammathur/extensions/redis@8.2

echo 'Install composer'
echo '----------------'
EXPECTED_COMPOSER_CHECKSUM="$(curl https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_COMPOSER_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
if [ "$EXPECTED_COMPOSER_CHECKSUM" != "$ACTUAL_COMPOSER_CHECKSUM" ]
then
    >&2 echo 'ERROR: Invalid installer checksum'
    rm composer-setup.php
    exit 1
fi
php composer-setup.php
rm composer-setup.php
sudo mkdir /usr/local/bin/
sudo mv composer.phar /usr/local/bin/composer

echo 'Install Laravel Valet'
echo '-------------'
composer global require laravel/valet

echo 'Install dbngin'
echo '-------------'
brew install --cask dbngin

echo 'Install warp terminal'
echo '-------------'
brew install --cask warp
brew install thefuck

echo 'Install VS Code'
echo '--------------'
brew install --cask visual-studio-code

# echo 'Install docker'
# echo '--------------'
# brew install --cask docker
# brew install docker-compose
# # Link docker-compose
# mkdir -p ~/.docker/cli-plugins
# ln -sfn /usr/local/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose

echo 'Install ray'
echo '--------------'
brew install --cask ray

echo 'Install tableplus'
echo '--------------'
brew install --cask tableplus

echo 'Install insomnia'
echo '--------------'
brew install --cask insomnia

echo 'Install cyberduck'
echo '--------------'
brew install --cask cyberduck

# echo 'Install mackup'
# echo '--------------'
# brew install mackup

echo 'Install mas'
echo '--------------'
brew install mas

echo 'Install zsh-autosuggestions'
echo '---------------------------'
brew install zsh-autosuggestions

echo 'Install brave-browser'
echo '--------------'
brew install --cask brave-browser

echo 'Install firefox'
echo '--------------'
brew install --cask firefox

echo 'Install notion'
echo '--------------'
brew install --cask notion

echo 'Install vlc'
echo '--------------'
brew install --cask vlc

echo 'Install slack'
echo '--------------'
brew install --cask slack

echo 'Install discord'
echo '--------------'
brew install --cask discord
brew install --cask betterdiscord-installer

echo 'Install bettertouchtool'
echo '--------------'
brew install --cask bettertouchtool

echo 'Install keyboardcleantool'
echo '--------------'
brew install --cask keyboardcleantool

echo 'Install caffeine'
echo '--------------'
brew install --cask caffeine

echo 'Install stats'
echo '--------------'
brew install --cask stats

echo 'Install aldente'
echo '--------------'
brew install --cask aldente

echo 'Install itsycal'
echo '--------------'
brew install --cask itsycal

echo 'Install folx'
echo '--------------'
brew install --cask folx

brew install menu-bar-splitter
brew install --cask eqmac

# Enable homebrew automatic post-install cleanup
export HOMEBREW_NO_INSTALL_CLEANUP=0

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'
echo 'Things to do to make the agnoster terminal theme work:'
echo '1. Install menlo patched font included in ~/.dotfiles/misc https://gist.github.com/qrush/1595572/raw/Menlo-Powerline.otf'
echo '2. Install patched solarized theme included in ~/.dotfiles/misc'

echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits'

echo '1. Make sure dropbox is running first. If you have not backed up via Mackup yet, then run `mackup backup` to symlink preferences for a wide collection of apps to your dropbox. If you already had a backup via mackup run `mackup restore` You'\''ll find more info on Mackup here: https://github.com/lra/mackup.'
echo '2. Set some sensible os x defaults by running: $HOME/.dotfiles/macos/set-defaults.sh'
echo '3. Make a .dotfiles-custom/shell/.aliases for your personal commands'

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
